version: '3'

tasks:
  init:
    desc: "Initialize Multipass VMs and install Docker"
    cmds:
      - multipass launch --name swarm-manager --memory 2G --disk 10G --cpus 2 --network en0
      - multipass launch --name swarm-worker --memory 2G --disk 10G --cpus 2 --network en0
      - multipass list
      - task:install-docker

  install-docker:
    desc: "Install Docker and configure permissions on both nodes"
    cmds:
      - multipass exec swarm-manager -- sudo snap install docker
      - multipass exec swarm-worker -- sudo snap install docker
      - multipass exec swarm-manager -- sudo groupadd docker || true
      - multipass exec swarm-worker -- sudo groupadd docker || true
      - multipass exec swarm-manager -- sudo usermod -aG docker ubuntu
      - multipass exec swarm-worker -- sudo usermod -aG docker ubuntu
      - multipass exec swarm-manager -- newgrp docker
      - multipass exec swarm-worker -- newgrp docker
      - multipass exec swarm-manager -- sudo chown root:docker /var/run/docker.sock
      - multipass exec swarm-worker -- sudo chown root:docker /var/run/docker.sock

  swarm-init:
    desc: "Initialize Docker Swarm on the manager node and get the token"
    cmds:
      # 1) Run `docker swarm init` inside the manager VM, *including* hostname -I
      - multipass exec swarm-manager -- bash -c 'docker swarm init --advertise-addr $(hostname -I | awk "{print \$1}")'

      # 2) Generate the worker token file on the manager
      - multipass exec swarm-manager -- bash -c 'docker swarm join-token worker -q > /home/ubuntu/swarm-token.txt'

      # 3) Copy swarm-token.txt from manager to your local machine
      - multipass transfer swarm-manager:/home/ubuntu/swarm-token.txt ./swarm-token.txt


  join-worker:
    desc: "Join worker node to the Swarm"
    cmds:
      - multipass transfer ./swarm-token.txt swarm-worker:/home/ubuntu/swarm-token.txt
      - |
        MANAGER_IP=$(multipass exec swarm-manager -- hostname -I | awk '{print $1}')
        multipass exec swarm-worker -- docker swarm join \
          --token $(cat ./swarm-token.txt) \
          ${MANAGER_IP}:2377

  deploy-nginx:
    desc: "Deploy an Nginx service in Swarm"
    cmds:
      - multipass exec swarm-manager -- docker service create --name nginx --publish 8080:80 --replicas 2 nginx
      - echo "Nginx service deployed. Access at http://$(multipass info swarm-manager | grep 'IPv4' | awk 'NR==1{print $2}'):8080"

  check:
    desc: "Check Swarm nodes and services"
    cmds:
      - multipass exec swarm-manager -- docker node ls
      - multipass exec swarm-manager -- docker service ls
      - multipass exec swarm-manager -- docker service ps nginx

  test-nginx:
    desc: "Test access to the Nginx service"
    cmds:
      - multipass exec swarm-worker -- curl http://$(multipass info swarm-manager | grep 'IPv4' | awk 'NR==1{print $2}'):8080

  full-setup:
    desc: "Run full end-to-end setup and deployment"
    cmds:
      - task:init
      - task:swarm-init
      - task:join-worker
      - task:deploy-nginx
      - task:check
      - echo "Setup complete! Access Nginx at http://$(multipass info swarm-manager | grep 'IPv4' | awk 'NR==1{print $2}'):8080"

  cleanup:
    desc: "Remove Multipass VMs and clean up"
    cmds:
      - multipass delete swarm-manager swarm-worker
      - multipass purge
      - echo "All resources cleaned up."

  full-cleanup:
    desc: "Run cleanup process to remove all VMs"
    cmds:
      - task:cleanup
      - echo "All resources have been cleaned up successfully."